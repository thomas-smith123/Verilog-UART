/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tx_data_ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tx_data_valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tx_pin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bit_cnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bit_cnt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bit_cnt";
}

SIGNAL("bit_cnt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bit_cnt";
}

SIGNAL("bit_cnt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bit_cnt";
}

SIGNAL("cycle_cnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cycle_cnt[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

SIGNAL("cycle_cnt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle_cnt";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("rst_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("tx_data_ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 43396.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 43400.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 3185.0;
	}
}

TRANSITION_LIST("tx_data_valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9999.0;
		LEVEL 1 FOR 90001.0;
	}
}

TRANSITION_LIST("tx_pin")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10005.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4340.0;
				LEVEL 1 FOR 4340.0;
			}
			LEVEL 0 FOR 8680.0;
			LEVEL 1 FOR 4340.0;
			LEVEL 0 FOR 4340.0;
			LEVEL 1 FOR 8690.0;
		}
		LEVEL 0 FOR 3175.0;
	}
}

TRANSITION_LIST("bit_cnt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31705.0;
		LEVEL 1 FOR 17360.0;
		LEVEL 0 FOR 26050.0;
		LEVEL 1 FOR 17360.0;
		LEVEL 0 FOR 7525.0;
	}
}

TRANSITION_LIST("bit_cnt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23025.0;
		LEVEL 1 FOR 8680.0;
		LEVEL 0 FOR 8680.0;
		LEVEL 1 FOR 8680.0;
		LEVEL 0 FOR 17370.0;
		LEVEL 1 FOR 8680.0;
		LEVEL 0 FOR 8680.0;
		LEVEL 1 FOR 8680.0;
		LEVEL 0 FOR 7525.0;
	}
}

TRANSITION_LIST("bit_cnt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18685.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4340.0;
			LEVEL 0 FOR 4340.0;
		}
		LEVEL 1 FOR 4340.0;
		LEVEL 0 FOR 13030.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4340.0;
			LEVEL 0 FOR 4340.0;
		}
		LEVEL 1 FOR 4340.0;
		LEVEL 0 FOR 7525.0;
	}
}

TRANSITION_LIST("cycle_cnt[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle_cnt[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12565.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 9;
				LEVEL 1 FOR 1780.0;
				LEVEL 0 FOR 2560.0;
			}
			LEVEL 1 FOR 1780.0;
			LEVEL 0 FOR 2570.0;
		}
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("cycle_cnt[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11285.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 9;
				LEVEL 1 FOR 1280.0;
				LEVEL 0 FOR 1280.0;
				LEVEL 1 FOR 500.0;
				LEVEL 0 FOR 1280.0;
			}
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 1290.0;
		}
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("cycle_cnt[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10645.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 640.0;
					LEVEL 0 FOR 640.0;
				}
				LEVEL 1 FOR 640.0;
				LEVEL 0 FOR 1140.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 640.0;
				LEVEL 0 FOR 640.0;
			}
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 640.0;
				LEVEL 0 FOR 640.0;
			}
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 1150.0;
		}
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("cycle_cnt[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10325.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 320.0;
				LEVEL 0 FOR 320.0;
			}
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 180.0;
				NODE
				{
					REPEAT = 6;
					LEVEL 0 FOR 320.0;
					LEVEL 1 FOR 320.0;
				}
				LEVEL 0 FOR 320.0;
			}
			LEVEL 1 FOR 180.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 320.0;
				LEVEL 1 FOR 320.0;
			}
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 330.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 295.0;
	}
}

TRANSITION_LIST("cycle_cnt[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10165.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 13;
				LEVEL 1 FOR 160.0;
				LEVEL 0 FOR 160.0;
			}
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 13;
					LEVEL 0 FOR 160.0;
					LEVEL 1 FOR 160.0;
				}
				LEVEL 0 FOR 160.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 13;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 170.0;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 135.0;
	}
}

TRANSITION_LIST("cycle_cnt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10085.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				NODE
				{
					REPEAT = 26;
					LEVEL 1 FOR 80.0;
					LEVEL 0 FOR 80.0;
				}
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 100.0;
			}
			NODE
			{
				REPEAT = 26;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 100.0;
			NODE
			{
				REPEAT = 26;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 110.0;
		}
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 55.0;
	}
}

TRANSITION_LIST("cycle_cnt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10045.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				NODE
				{
					REPEAT = 53;
					LEVEL 1 FOR 40.0;
					LEVEL 0 FOR 40.0;
				}
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 60.0;
			}
			NODE
			{
				REPEAT = 53;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 53;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("cycle_cnt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10025.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				NODE
				{
					REPEAT = 107;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 40.0;
			}
			NODE
			{
				REPEAT = 107;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 107;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("cycle_cnt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10015.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2169;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 158;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rst_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_data_ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_data_valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_pin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bit_cnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "bit_cnt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "bit_cnt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "bit_cnt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "cycle_cnt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 9;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
